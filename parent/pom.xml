<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Author and Authors.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>at.gruene.parteiapp.parent</groupId>
    <artifactId>parteiapp-parent</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>
        Parent for all Parteiapp projects
    </description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <tomee.version>8.0.0</tomee.version>
        <javaee-api.version>8.0-3</javaee-api.version>
        <myfaces.version>2.3.4</myfaces.version>

        <slf4j.version>1.7.12</slf4j.version>
        <log4j2.version>2.11.2</log4j2.version>
        <deltaspike.version>1.9.0</deltaspike.version>

        <projectstage>Development</projectstage>
        <tomee.additional.args></tomee.additional.args>

        <openjpa.version>3.1.0</openjpa.version>
        <openjpa.skipenhance>true</openjpa.skipenhance>

        <openjpa.connectionProperties>
            driverClassName=${database.driver.name},
            url=${database.connection.url},
            username=${database.user},
            password=${database.password}
        </openjpa.connectionProperties>

        <h2.version>1.4.195</h2.version>
        <postgres-connector.version>42.2.5</postgres-connector.version>

        <!--
        H2 requires an absolute path, to be able to run multiple builds in parallel we need one path per build
        override with -Dh2.database.base.path=<absolute_path>
        To connect to the H2 Database while it is in use (e.g. while running tomcat), we added the AUTO_SERVER_PORT.
        By default this is 9090, override with -Dh2.database.base.port=9091
        Attention, path is OS dependent (e.g. under windows you will need something like /D:/tmp/h2/v3

        h2.database.base.port - use a different default for trunk and branches 9051 = R05 first branch assigned
        h2.bindAddress        - use localhost (= 127.0.0.1) to listen and access database locally
        h2.database.base.path - use a separate database for each branch (and port)
        -->
        <h2.bindAddress>127.0.0.1</h2.bindAddress>
        <h2.database.base.port>7090</h2.database.base.port>
        <h2.database.base.path>/tmp/parteiapp/</h2.database.base.path>
        <h2.database.driver.name>org.h2.Driver</h2.database.driver.name>
        <h2.database.connection.url>jdbc:h2:file:${h2.database.base.path}/${project.artifactId};AUTO_SERVER=TRUE;MVCC=TRUE;AUTO_SERVER_PORT=${h2.database.base.port};MAX_LENGTH_INPLACE_LOB=4096</h2.database.connection.url>
        <h2.database.user>sa</h2.database.user>
        <h2.database.password />
        <h2.database.onError.action>abort</h2.database.onError.action>

        <postgres.database.driver.name>org.postgresql.Driver</postgres.database.driver.name>
        <postgres.database.connection.url>jdbc:postgresql://localhost:5432/parteiapp?currentSchema=${project.artifactId}</postgres.database.connection.url>
        <postgres.database.user>parteiapp</postgres.database.user>
        <postgres.database.password>parteiapp</postgres.database.password>
        <postgres.database.onError.action>abort</postgres.database.onError.action>

    </properties>


    <dependencies>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${javaee-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Deltaspike -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <version>${deltaspike.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-openejb</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>

        <dependency>
            <!-- because of build-time enhancement -->
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>${openjpa.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.openjpa</groupId>
                    <artifactId>openjpa-maven-plugin</artifactId>
                    <version>${openjpa.version}</version>
                    <configuration>
                        <skip>${openjpa.skipenhance}</skip>
                        <sqlAction>${openjpa.sqlAction}</sqlAction>
                        <sqlFile>${project.build.directory}/database-${database.vendor}.sql</sqlFile>
                        <addDefaultConstructor>true</addDefaultConstructor>
                        <enforcePropertyRestrictions>true</enforcePropertyRestrictions>
                        <includes>${openjpa.includes}</includes>
                        <connectionDriverName>org.apache.commons.dbcp.BasicDataSource</connectionDriverName>
                        <connectionProperties>
                            ${openjpa.connectionProperties}
                        </connectionProperties>
                        <toolProperties>
                            <!--
                             * These are the same like in persistence.properties but without 'openjpa.' and 'jdbc.' in front.
                             * We need them here as they are not in persistence.xml
                            -->
                            <MappingDefaults>ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict</MappingDefaults>
                        </toolProperties>
                    </configuration>

                    <executions>
                        <execution>
                            <id>enhance-classes</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>enhance</goal>
                            </goals>
                        </execution>
                    </executions>

                    <dependencies>
                        <dependency>
                            <groupId>org.apache.openjpa</groupId>
                            <artifactId>openjpa</artifactId>
                            <version>${openjpa.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>commons-dbcp</groupId>
                            <artifactId>commons-dbcp</artifactId>
                            <version>1.4</version>
                        </dependency>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres-connector.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>


                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.4</version>
                    <configuration>
                        <skip>${skipTests}</skip>
                        <driver>${database.driver.name}</driver>
                        <url>${database.connection.url}</url>
                        <username>${database.user}</username>
                        <password>${database.password}</password>
                        <escapeProcessing>false</escapeProcessing>
                        <srcFiles>
                            <srcFile>src/main/sql/${database.vendor}/createdb.sql</srcFile>
                            <srcFile>src/main/sql/${database.vendor}/database.sql</srcFile>
                            <srcFile>src/main/sql/${database.vendor}/schema_delta.sql</srcFile>
                            <srcFile>src/main/sql/${database.vendor}/createindex.sql</srcFile>
                            <srcFile>src/test/sql/${database.vendor}/testdata.sql</srcFile>
                        </srcFiles>
                    </configuration>
                    <executions>
                        <execution>
                            <id>setup-test-database</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres-connector.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.apache.tomee.maven</groupId>
                    <artifactId>tomee-maven-plugin</artifactId>
                    <version>${tomee.version}</version>
                    <configuration>
                        <synchronization>
                            <extensions>
                                <extension>.class</extension>
                                <extension>.properties</extension>
                                <extension>.css</extension>
                                <extension>.xhtml</extension>
                                <!-- if you want to update each time you build with mvn compile -->
                            </extensions>
                            <updateInterval>2</updateInterval>
                        </synchronization>

                        <!-- because resource filtering ... -->
                        <config>${project.build.directory}/tomee/conf</config>

                        <!-- removed the .war extension from the "warFile" property, so we can use exploded archives -->
                        <warFile>${project.build.directory}/${project.build.finalName}</warFile>

                        <!-- path that is used by tomEE in the tomee:deploy and tomee:undeploy goal -->
                        <path>${project.build.directory}/apache-tomee/webapps/${project.build.finalName}</path>

                        <args>-Dorg.apache.deltaspike.ProjectStage=${projectstage} -Dfaces.PROJECT_STAGE=${projectstage} -Dopenejb.log.factory=log4j -Dfile.encoding=UTF-8 -Xms128m -Xmx1024m  -XX:+DisableExplicitGC ${tomee.additional.args}</args>

                        <simpleLog>true</simpleLog>
                        <context>${project.artifactId}</context>

                        <libs>
                            <lib>com.h2database:h2:${h2.version}</lib>
                            <lib>org.postgresql:postgresql:${postgres-connector.version}</lib>

                            <lib>remove:slf4j-jdk14</lib>
                            <lib>org.apache.logging.log4j:log4j-api:${log4j2.version}</lib>
                            <lib>org.apache.logging.log4j:log4j-core:${log4j2.version}</lib>
                            <lib>org.apache.logging.log4j:log4j-jul:${log4j2.version}</lib>
                            <lib>org.apache.logging.log4j:log4j-slf4j-impl:${log4j2.version}</lib>

                        </libs>
                        <classpaths>
                            <classpath>org.apache.logging.log4j:log4j-api:${log4j2.version}</classpath>
                            <classpath>org.apache.logging.log4j:log4j-jul:${log4j2.version}</classpath>
                            <classpath>org.apache.logging.log4j:log4j-core:${log4j2.version}</classpath>
                        </classpaths>
                        <systemVariables>
                            <log4j.configurationFile>${project.build.directory}/apache-tomee/conf/log4j2.xml</log4j.configurationFile>
                            <java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
                        </systemVariables>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>h2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <database.vendor>h2</database.vendor>

                <database.driver.name>${h2.database.driver.name}</database.driver.name>
                <database.connection.url>${h2.database.connection.url}</database.connection.url>
                <database.user>${h2.database.user}</database.user>
                <database.password>${h2.database.password}</database.password>
                <database.onError.action>${h2.database.onError.action}</database.onError.action>
            </properties>
        </profile>

        <profile>
            <id>h2server</id>
            <properties>
                <database.vendor>h2</database.vendor>

                <h2.database.connection.url>jdbc:h2:tcp://localhost:${h2.database.base.port}${h2.database.base.path}/parteiappdb</h2.database.connection.url>
            </properties>
        </profile>

        <profile>
            <id>postgres</id>
            <properties>
                <database.vendor>postgres</database.vendor>

                <database.driver.name>${postgres.database.driver.name}</database.driver.name>
                <database.connection.url>${postgres.database.connection.url}</database.connection.url>
                <database.user>${postgres.database.user}</database.user>
                <database.password>${postgres.database.password}</database.password>
                <database.onError.action>${postgres.database.onError.action}</database.onError.action>
            </properties>
        </profile>
    </profiles>

</project>
